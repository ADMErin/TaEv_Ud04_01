{"version":3,"file":"src_app_pages_voz_voz_module_ts.js","mappings":"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","sources":["./src/app/pages/voz/voz-routing.module.ts","./src/app/pages/voz/voz.module.ts","./src/app/pages/voz/voz.page.ts","./src/app/servicios/speech.service.ts","./node_modules/@capacitor-community/speech-recognition/dist/esm/index.js"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { VozPage } from './voz.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: VozPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class VozPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { VozPageRoutingModule } from './voz-routing.module';\n\nimport { VozPage } from './voz.page';\nimport { MisComponentesModule } from \"../../components/mis-componentes.module\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    VozPageRoutingModule,\n    MisComponentesModule\n],\n  declarations: [VozPage]\n})\nexport class VozPageModule {}\n","import { CamaraService } from './../../servicios/camara.service';\nimport { SpeechService } from './../../servicios/speech.service';\nimport { Component, OnInit } from '@angular/core';\nimport { SpeechRecognition } from '@capacitor-community/speech-recognition';\n\n@Component({\n  selector: 'app-voz',\n  templateUrl: './voz.page.html',\n  styleUrls: ['./voz.page.scss'],\n})\nexport class VozPage implements OnInit {\n\n  constructor(public speechRecognition: SpeechService, public camara: CamaraService) { }\n\n  ngOnInit() {\n  }\n  \n\n  public async escuchar() {\n\n    console.log(\"Boton pulsado\")\n    await SpeechRecognition.available();\n    console.log(\"Disponible\");\n    await SpeechRecognition.requestPermissions();\n    console.log(\"Permisos\");\n\n    try {\n      await SpeechRecognition.start({\n        prompt: \"Hablar\",\n        maxResults: 1,\n        partialResults: true,\n        language: 'es-ES',\n        popup: false\n      });\n      console.log(\"disponible\");\n\n      SpeechRecognition.addListener('partialResults', (result:any) => {\n        const transcripcion = result.matches[0];\n        console.log('Transcripcion:', transcripcion);\n        if (transcripcion.toLowerCase().includes(\"foto\")) {\n          this.camara.sacarFoto();\n        }\n      });\n\n      //await SpeechRecognition.stop();\n      //SpeechRecognition.removeAllListeners();\n      \n    } catch (error) {\n      console.error('Error con el inicio de reconocimiento de voz', error);\n    }\n    console.log(\"Reconocimiento de voz finalizado\");\n  };\n}\n\n\n","import { Injectable } from '@angular/core';\nimport { Plugins } from '@capacitor/core';\nimport { SpeechRecognition } from '@capacitor-community/speech-recognition';\n\n\n//const{ SpeechRecognition } = Plugins;\n@Injectable({\n  providedIn: 'root'\n})\nexport class SpeechService {\n\n  constructor() { }\n\n  async stop(){\n    await SpeechRecognition.stop();\n  }\n\n  async start(){\n\n    try {\n        await SpeechRecognition.start({\n          language: 'es-ES',\n          maxResults: 2,\n          prompt: \"Di algo\",\n          popup: false,\n          partialResults: true,\n        });\n        console.log(\"available\" );\n    } catch (error) {\n      console.error('Error al iniciar la reconocimiento de voz', error);\n    }\n\n  }  \n  async addEvent(){\n\n    }\n}\n","import { registerPlugin } from '@capacitor/core';\nconst SpeechRecognition = registerPlugin('SpeechRecognition', {\n    web: () => import('./web').then(m => new m.SpeechRecognitionWeb()),\n});\nexport * from './definitions';\nexport { SpeechRecognition };\n"],"names":["registerPlugin","SpeechRecognition","web","then","m","SpeechRecognitionWeb"],"sourceRoot":"webpack:///","x_google_ignoreList":[4]}